---
- name: 'Update network configuration'
  loop:
    - 'GATEWAY={{ network_gateway }}'
    - 'HOSTNAME={{ fqdn }}'
  lineinfile:
    path: '/etc/sysconfig/network'
    line: '{{ item }}'
    insertbefore: 'EOF'

- name: 'Template in defaults'
  loop:
    - '/etc/default/grub'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '{{ item }}'

- name: 'Regenerate GRUB options'
  command:
    argv:
      - '/sbin/grub2-mkconfig'
      - '-o'
      - '/boot/grub2/grub.cfg'

#- name: 'Add DNS resolver'
#  vars:
#    replace_internal: '8.8.8.8 \1'
#    regex_negative_lookahead: '8\.8\.8\.8'
#    regex_prefix: '[ \t]+static domain_name_servers='
#    regex_suffix: ''
#  replace:
#    path: '/etc/resolv.conf'
#    regexp: '^{{ regex_prefix }}((:?(?!{{ regex_negative_lookahead }}).)*?){{ regex_suffix }}$'
#    replace: '{{ regex_prefix }}{{ replace_internal }}{{ regex_suffix }}'

- name: 'Add local repo mount to fstab'
  lineinfile:
    path: '/etc/fstab'
    line: '{{ fstab_device }}  {{ fstab_mount }}  iso9660  ro,noauto  0  0'

- name: 'Mount local repo image'
  register: 'reg_mount'
  changed_when:
    - 'reg_mount.rc != 0'
    - 'e_mount_already_already not in reg_mount.stderr'
    - 'e_mount_no_media not in reg_mount.stderr'
  failed_when:
    - 'reg_mount.rc != 0'
    - 'e_mount_notfound_fstab in reg_mount.stderr'
    - 'e_mount_no_media not in reg_mount.stderr'
  command:
    argv:
      - '/bin/mount'
      - '{{ fstab_mount }}'

- name: 'Install yum repos'
  loop: '{{ yum_repos }}'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

# TODO: maybe replace with yum module?
# TODO: figure out failed_when for yum clean all and yum update
- name: 'Freshen yum data'
  when:
    - 'e_mount_no_media not in reg_mount.stderr'
  loop:
    - 'clean all'
    - '-y update'
  command: 'yum {{ item }}'

- name: 'Stop and disable k3s'
  failed_when: no
  systemd:
    name: 'k3s'
    enabled: no
    state: 'stopped'
    daemon_reload: yes

- name: 'Copy legacy RPMs'
  loop: '{{ legacy_rpms }}'
  copy:
    src: 'rpms/{{ item }}'
    dest: '/tmp/'

# TODO: figure out failed_when for yum install and changed_when so we don't reboot every time
- name: 'Install legacy RPMs'
  register: 'reg_iptables'
  command:
    argv: '{{ install_command_prefix + prefixed_legacy_rpms }}'
...
# vim: set filetype=yaml
