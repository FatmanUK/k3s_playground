---
- name: 'Check if tarball exists already'
  register: 'reg_tarball'
  connection: 'local'
  run_once: yes
  become: no
  stat:
    path: '{{ helm_tarball }}'

- name: 'Get checksum from tarballed file'
  when: 'reg_tarball.stat.exists'
  register: 'reg_checksum'
  connection: 'local'
  run_once: yes
  become: no
  archived_checksum:
    path: '{{ helm_tarball }}'
    archived_file: 'helm'

- name: 'Download specified binaries'
  when: 'not reg_tarball.stat.exists
         or reg_checksum.checksum != helm_sha256_checksum'
  connection: 'local'
  run_once: yes
  become: no
  retries: 5
  delay: 5
  get_url:
    url: '{{ helm_url }}'
    dest: '{{ helm_tarball | dirname }}/{{ helm_binary }}'
    checksum: 'sha256:{{ helm_sha256_checksum }}'
    use_proxy: no

# TODO: failed_when or module?
- name: 'Tarball up binaries'
  when: 'not reg_tarball.stat.exists
         or reg_checksum.checksum != helm_sha256_checksum'
  connection: 'local'
  run_once: yes
  become: no
  command:
    argv:
      - '/usr/bin/tar'
      - 'cpzf'
      - '{{ helm_tarball }}'
      - '-C'
      - '{{ helm_tarball | dirname }}'
      - '{{ helm_binary }}'

- name: 'Unarchive the helm binary'
  unarchive:
    src: '{{ helm_tarball }}'
    dest: '{{ k3s_binary_dir }}/'

- name: 'Permission the binary'
  file:
    path: '{{ k3s_binary_dir }}/{{ helm_binary }}'
    mode: '0755'
    owner: 'root'
    group: 'root'
...
# vim: set filetype=yaml
