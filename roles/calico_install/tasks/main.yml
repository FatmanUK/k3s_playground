---
# TODO: see what effect async and poll have on this task, maybe use it more
# TODO: figure out failed_when condition for kubectl wait
- name: 'Wait for all nodes'
  async: '{{ ((nodes_timeout[:-1] | int) * 60) + 1 }}'
  poll: 5  # make sure timeouts are in minutes
  loop: '{{ groups["k3s_masters"] }}'
  command:
    argv:
      - '/usr/local/bin/kubectl'
      - 'wait'
      - '--timeout={{ nodes_timeout }}'
      - '--for=condition=Ready'
      - 'node'
      - '{{ item }}.{{ domain }}'

# module candidate? k3s_wait
# do repeat-until for long waits
# TODO: figure out failed_when condition for kubectl wait
- name: 'Wait for core pods'
  loop: '{{ core_selectors }}'
  run_once: yes
  command:
    argv:
      - '/usr/local/bin/kubectl'
      - 'wait'
      - '--timeout={{ core_timeout | default(default_wait_timeout) }}'
      - '--for=condition=Ready'
      - 'pod'
      - '-n'
      - '{{ core_namespace }}'
      - '--selector={{ item }}'

# module candidate? k3s_wait
# do repeat-until for long waits
# TODO: figure out failed_when condition for kubectl wait
- name: 'Wait for Calico pods'
  loop: '{{ calico_selectors }}'
  run_once: yes
  command:
    argv:
      - '/usr/local/bin/kubectl'
      - 'wait'
      - '--timeout={{ calico_timeout | default(default_wait_timeout) }}'
      - '--for=condition=Ready'
      - 'pod'
      - '-n'
      - '{{ calico_namespace }}'
      - '--selector={{ item }}'
...
# vim: set filetype=yaml
