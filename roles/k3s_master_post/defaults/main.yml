---
registry_namespace: 'docker-registry'
registry_pvc_name: '{{ registry_namespace }}-pvc'
registry_service_name: '{{ registry_namespace }}-svc'
registry_app_name: '{{ registry_namespace }}-app'
registry_deployment_name: '{{ registry_namespace }}-dep'
registry_container_name: '{{ registry_namespace }}-container'
registry_volume_name: '{{ registry_namespace }}-volume'

registry_pvc_size_gb: 6

registry_service_node_port: 30555

registry_version: '2.7.1'
registry_image: 'thomasdegraaff/registry-pull-through:{{ registry_version }}'

# these are for the putative upstream login, currently left blank
registry_user: ''
registry_pwd: ''

registry_file: '/etc/rancher/k3s/registries.yaml'

e_manifest_already: 'Error from server (AlreadyExists)'
e_wait_ok: 'condition met'

default_wait_timeout: '300s'
core_timeout: '600s'
nodes_timeout: '600s'
longhorn_timeout: '7200s'
cert_manager_timeout: '600s'

k3s_manifests:
  calico:
    - 'calico/tigera-operator.yaml'
    - 'calico/custom-resources.yaml'
    - 'calico/calicoctl.yaml'
  longhorn:
    - 'longhorn/longhorn.yaml'
  registry:
    - 'docker-registry/docker-pv.yaml'
    - 'docker-registry/docker-registry.yaml'
  metallb:
    - 'metallb/metallb-native.yaml'
  metallb_pool:
    - 'metallb/metallb-pool.yaml'
  nginx_ingress:
    - 'nginx-ingress/nginx-ingress.yaml'
  cert_manager:
    - 'cert-manager/cert-manager.yaml'

k3s_namespaces:
  core: 'kube-system'
  longhorn: 'longhorn-system'
  registry: '{{ registry_namespace }}'
  metallb: 'metallb-system'
  cert_manager: 'cert-manager'

k3s_selectors:
  core:
    - 'k8s-app=kube-dns'
    - 'k8s-app=metrics-server'
    - 'app=local-path-provisioner'
  longhorn:
    - 'app=longhorn-driver-deployer'
    - 'app=longhorn-manager'
    - 'longhorn.io/component=engine-image'
    - 'longhorn.io/component=instance-manager'
    - 'app=csi-attacher'
    - 'app=csi-provisioner'
    - 'app=csi-resizer'
    - 'app=csi-snapshotter'
    - 'app=longhorn-csi-plugin'
    - 'app=longhorn-ui'
  registry:
    - 'app={{ registry_app_name }}'
  metallb:
    - 'component=controller'
    - 'component=speaker'
  cert_manager:
    - 'app.kubernetes.io/instance=cert-manager'
...
# vim: set filetype=yaml
