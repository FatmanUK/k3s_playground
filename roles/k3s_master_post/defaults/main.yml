---
registry_namespace: 'docker-registry'

registry_pvc_name: 'docker-registry-pvc'
registry_pvc_size_gb: 5
registry_pvc_storage_class_name: 'managed-nfs-storage'

registry_service_name: 'docker-registry'
registry_service_node_port: 30555

registry_app_name: 'docker-registry'

registry_deployment_name: 'docker-registry'

registry_container_name: 'docker-registry'

registry_container_image_version: '2.7.1'
registry_container_image: 'thomasdegraaff/registry-pull-through:{{ registry_container_image_version }}'

registry_container_user: ''
registry_container_pwd: ''

registry_volume_mount_path: '/var/lib/registry'
registry_volume_name: 'docker-registry-data'

e_manifest_already: 'Error from server (AlreadyExists)'
e_wait_ok: 'condition met'

registry_file: '/etc/rancher/k3s/registries.yaml'

nodes_timeout: '3600s'
longhorn_timeout: '86400s'

manifests:
  calico:
    - 'calico/tigera-operator.yaml'
    - 'calico/custom-resources.yaml'
    - 'calico/calicoctl.yaml'
  longhorn:
    - 'longhorn/longhorn.yaml'
  registry:
    - 'docker-registry/docker-pv.yaml'
    - 'docker-registry/docker-registry.yaml'
  metallb:
    - 'metallb/metallb-native.yaml'
  metallb_pool:
    - 'metallb/metallb-pool.yaml'
  nginx-ingress:
    - 'nginx-ingress/nginx-ingress.yaml'
  cert-manager:
    - 'cert-manager/cert-manager.yaml'

namespaces:
  core: 'kube-system'
  longhorn: 'longhorn-system'
  registry: 'docker-registry'
  metallb: 'metallb-system'
  cert-manager: 'cert-manager'

selectors:
  core:
    - 'k8s-app=kube-dns'
    - 'k8s-app=metrics-server'
    - 'app=local-path-provisioner'
  longhorn:
    - 'app=longhorn-driver-deployer'
    - 'app=longhorn-manager'
    - 'app=longhorn-ui'
    - 'longhorn.io/component=engine-image'
    - 'longhorn.io/component=instance-manager'
    - 'app=csi-attacher'
    - 'app=csi-provisioner'
    - 'app=csi-resizer'
    - 'app=csi-snapshotter'
    - 'app=longhorn-csi-plugin'
  registry:
    - 'app=docker-registry'
  metallb:
    - 'component=controller'
    - 'component=speaker'
  cert-manager:
    - 'app.kubernetes.io/instance=cert-manager'
...
# vim: set filetype=yaml
