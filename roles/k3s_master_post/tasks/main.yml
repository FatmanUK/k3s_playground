---
# If we don't do this here, nodes never show as Ready since they don't
# have a CNI (because Flannel is disabled)
- name: 'Install Calico CNI'
  vars:
    manifests: '{{ k3s_manifests.calico }}'
    namespace: '{{ k3s_namespaces.core }}'
    wait_selectors: '{{ k3s_selectors.core }}'
    wait_timeout: '{{ core_timeout }}'
  import_tasks: 'install_and_wait.yml'

# TODO: see what effect async and poll have on this task, maybe use it more
# TODO: figure out failed_when condition for kubectl wait
- name: 'Wait for all nodes'
  run_once: yes
  async: '{{ (nodes_timeout[:-1] | int) + 1 }}'
  poll: 1
  command:
    argv:
      - '/usr/local/bin/kubectl'
      - 'wait'
      - '--timeout={{ nodes_timeout }}'
      - '--for=condition=Ready'
      - 'node'
      - '{{ inventory_hostname }}.{{ domain }}'

# Need Longhorn before Registry
- name: 'Install Longhorn'
  vars:
    manifests: '{{ k3s_manifests.longhorn }}'
    namespace: '{{ k3s_namespaces.longhorn }}'
    wait_selectors: '{{ k3s_selectors.longhorn }}'
    wait_timeout: '{{ longhorn_timeout }}'
  import_tasks: 'install_and_wait.yml'

- name: 'Install registry configuration'
  blockinfile:
    block: |
      mirrors:
        docker.io:
          endpoint:
            - 'http://127.0.0.1:{{ registry_service_node_port }}'
    dest: '{{ registry_file }}'
    create: yes
    marker: '# {mark} ANSIBLE MANAGED BLOCK --- registry'

# This should be first after Calico. I'd be tempted to install before
# Calico, but I don't think that'd work.
# Might need to set up some storage.
# https://thomasdegraaff.eu/notes/2021/12/04/k3s_docker_pull_through_registry/
- name: 'Install Registry'
  vars:
    manifests: '{{ k3s_manifests.registry }}'
    namespace: '{{ k3s_namespaces.registry }}'
    wait_selectors: '{{ k3s_selectors.registry }}'
  import_tasks: 'install_and_wait.yml'

- name: 'Install MetalLB'
  vars:
    manifests: '{{ k3s_manifests.metallb }}'
    namespace: '{{ k3s_namespaces.metallb }}'
    wait_selectors: '{{ k3s_selectors.metallb }}'
  import_tasks: 'install_and_wait.yml'

- name: 'Install MetalLB pool'
  vars:
    manifests: '{{ k3s_manifests.metallb_pool }}'
  import_tasks: 'install_and_wait.yml'

- name: 'Install nginx ingress'
  vars:
    manifests: '{{ k3s_manifests.nginx_ingress }}'
  import_tasks: 'install_and_wait.yml'

- name: 'Install cert-manager'
  vars:
    manifests: '{{ k3s_manifests.cert_manager }}'
    namespace: '{{ k3s_namespaces.cert_manager }}'
    wait_selectors: '{{ k3s_selectors.cert_manager }}'
    wait_timeout: '{{ cert_manager_timeout }}'
  import_tasks: 'install_and_wait.yml'

# Removed deletion of completed jobs. There's no reliable way to wait
# for completion --- the wait is never triggered by the condition and
# Google knows nothing.
...
# vim: set filetype=yaml
