---
- name: 'Configure for RHEL'
  when: 'distro == "rhel"'
  import_tasks: 'rhel_configure.yml'

- name: 'Configure for Void'
  when: 'distro == "void"'
  import_tasks: 'void_configure.yml'

# /etc/rancher/k3s/k3s.yaml ?

# Not sure I can add this to the meta hosts role as it is.
- name: 'Add k3s-vip to hosts file'
  vars:
    vip_name: 'k3s-vip'
  lineinfile:
    path: '/etc/hosts'
    line: '{{ keepalived_vip_address }} {{ vip_name }}.{{ domain }} {{ vip_name }}'

- name: 'Create machine-id file'
  copy:
    content: '{{ lookup("password", "/dev/null length=32", chars=["hexdigits"]) | lower }}'
    dest: '/etc/machine-id'

- name: 'Add DNS resolver'
  vars:
    replace_internal: '8.8.8.8 \1'
    regex_negative_lookahead: '8\.8\.8\.8'
    regex_prefix: '[ \t]+static domain_name_servers='
    regex_suffix: ''
  replace:
    path: '/etc/dhcpcd.conf'
    regexp: '^{{ regex_prefix }}((:?(?!{{ regex_negative_lookahead }}).)*?){{ regex_suffix }}$'
    replace: '{{ regex_prefix }}{{ replace_internal }}{{ regex_suffix }}'

- name: 'Create local repo mountpoint'
  register: 'reg_mkdir'
  vars:
    e_readonly: 'Read-only file system'
  failed_when:
    - 'reg_mkdir.rc is defined'
    - 'reg_mkdir.module_stdout is defined'
    - 'reg_mkdir.rc != 0'
    - 'e_readonly not in reg_mkdir.module_stdout'
  file:
    path: '/mnt/disc'
    state: 'directory'
    mode: '0000'

- name: 'Set hostname'
  register: 'reg_hostname'
  loop:
    - '/etc/hostname'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '{{ item }}'

- name: 'Set hostname (2)'
  register: 'reg_hostname_2'
  vars:
    conf:
      rhel: 'rhel'
      void: 'openbsd' # apparently the best option for Void
  hostname:
    name: '{{ fqdn }}'
    use: '{{ conf[distro] }}'

- name: 'Set random seed'
  notify: 'Restart sshd'
  vars:
    file: '/var/lib/random-seed'
  command:
    argv:
      - '/bin/dd'
      - 'bs=1'
      - 'count={{ "4 KB" | human_to_bytes }}'
      - 'if=/dev/urandom'
      - 'of={{ file }}'

# /dev/urandom is guaranteed to return at least one byte
# but can't guarantee more. By getting one at a time we
# guarantee to get our full 4K.

- name: 'Delete sshd private keys'
  notify: 'Restart sshd'
  loop:
    - 'ecdsa'
    - 'dsa'
    - 'ed25519'
    - 'rsa'
  file:
    path: '/etc/ssh/ssh_host_{{ item }}_key'
    state: 'absent'

- meta: 'flush_handlers'

- name: 'Reboot'
  when: 'reg_hostname is changed
         or reg_hostname_2 is changed'
  reboot:
...
# vim: set filetype=yaml
