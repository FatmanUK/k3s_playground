---
- name: 'Configure for RHEL'
  when: 'distro == "rhel"'
  import_tasks: 'rhel_configure.yml'

- name: 'Configure for Void'
  when: 'distro == "void"'
  import_tasks: 'void_configure.yml'

- name: 'Enable sysctl settings'
  loop: '{{ sysctl_settings }}'
  lineinfile:
    path: '/etc/sysctl.conf'
    line: '{{ item }}'
    insertbefore: 'EOF'

# /etc/rancher/k3s/k3s.yaml ?

- name: 'Create machine-id file'
  copy:
    content: '{{ lookup("password", "/dev/null length=32", chars=["hexdigits"]) | lower }}'
    dest: '/etc/machine-id'

- name: 'Add rshared option to root partition'
  vars:
    replace_internal: '\2,rshared'
    regex_negative_lookahead: 'rshared'
    regex_prefix: '([^ ]* \/ [^ ]* )'
    regex_suffix: '( \d \d)'
  replace:
    path: '/etc/fstab'
    regexp: '^{{ regex_prefix }}((:?(?!{{ regex_negative_lookahead }}).)*?){{ regex_suffix }}$'
    replace: '\1{{ replace_internal }}\4'

- name: 'Create local repo mountpoint'
  register: 'reg_mkdir'
  vars:
  failed_when:
    - 'reg_mkdir.rc is defined'
    - 'reg_mkdir.module_stdout is defined'
    - 'reg_mkdir.rc != 0'
    - 'e_mkdir_readonly not in reg_mkdir.module_stdout'
  file:
    path: '/mnt/disc'
    state: 'directory'
    mode: '0000'

- name: 'Template in some configs'
  loop: '{{ config_templates }}'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '{{ item }}'

- name: 'Set random seed'
  notify: 'Restart sshd'
  command:
    argv:
      - '/bin/dd'
      - 'bs=1'
      - 'count={{ "4 KB" | human_to_bytes }}'
      - 'if=/dev/urandom'
      - 'of=/var/lib/random-seed'

# /dev/urandom is guaranteed to return at least one byte
# but can't guarantee more. By getting one at a time we
# guarantee to get our full 4K.

- name: 'Delete sshd private keys'
  loop: '{{ sshd_private_key_types }}'
  file:
    path: '/etc/ssh/ssh_host_{{ item }}_key'
    state: 'absent'

- name: 'Reboot'
  reboot:
...
# vim: set filetype=yaml
