---
metallb_mode: 'manifest'

metallb_data:
  manifest:
    app: 'metallb'
    path: 'config/manifests/metallb-native.yaml'
    selectors:
      - selector: 'component=controller'
      - selector: 'component=speaker'
  operator:
    app: 'metallb-operator'
    path: 'bin/metallb-operator.yaml'
    selectors:
      - selector: 'control-plane=controller-manager'
      - selector: 'component=webhook-server'

project_urls:
  calico: 'https://raw.githubusercontent.com/projectcalico'
  longhorn: 'https://raw.githubusercontent.com/longhorn'
  metallb: 'https://raw.githubusercontent.com/metallb'
  certmgr: 'https://github.com/cert-manager'
  haproxy: 'https://raw.githubusercontent.com/haproxytech'

version_urls:
  calico: 'calico/{{ calico_version }}'
  longhorn: 'longhorn/{{ longhorn_version }}'
  metallb: '{{ metallb_data[metallb_mode].app }}/{{ metallb_version }}'
  certmgr: 'cert-manager/releases/download/{{ certmgr_version }}'
  haproxy: 'kubernetes-ingress/{{ haproxy_version }}'

urls:
  calico: '{{ project_urls.calico }}/{{ version_urls.calico }}'
  longhorn: '{{ project_urls.longhorn }}/{{ version_urls.longhorn }}'
  metallb: '{{ project_urls.metallb }}/{{ version_urls.metallb }}'
  certmgr: '{{ project_urls.certmgr }}/{{ version_urls.certmgr }}'
  haproxy: '{{ project_urls.haproxy }}/{{ version_urls.haproxy }}'

# please use minutes so we can rely on seconds for polling
timeouts:
  tigera: '20m'
  calico: '20m'
  core: '20m'
  longhorn: '360m' # Longhorn takes ages to pull
  certmgr: '10m'

node_selectors: '[{% for h in (groups.k3s_masters | sort) %}{{ "{" }}{% for y in [{ "selector": [h, domain] | join(".") }, {"type": "node"}, {"timeout": nodes_timeout}] %}"{{ y.keys() | first }}": "{{ y.values() | first }}",{% endfor %}{{ "}, " }}{% endfor %}]'

kube_selectors:
  - selector: 'k8s-app=kube-dns'
    timeout: '{{ timeouts.core }}'
  - selector: 'k8s-app=metrics-server'
    timeout: '{{ timeouts.core }}'
  - selector: 'app=local-path-provisioner'
    timeout: '{{ timeouts.core }}'

manifest_sets:
  - prefix: 'calico'
    namespace: 'tigera-operator'
    install:
      - '{{ urls.calico }}/manifests/tigera-operator.yaml'
    post_install_selectors:
      - selector: 'k8s-app=tigera-operator'
        timeout: '{{ timeouts.tigera }}'

  - prefix: 'calico'
    namespace: 'calico-system'
    # namespace: 'kube-system'
    install:
      - '{{ urls.calico }}/manifests/calico.yaml'
      - '{{ urls.calico }}/manifests/calicoctl.yaml'
      - '{{ urls.calico }}/manifests/custom-resources.yaml'
    post_install_selectors:
      - selector: 'k8s-app=calico-kube-controllers'
        timeout: '{{ timeouts.calico }}'
      # - selector: 'k8s-app=calico-node'
      #   timeout: '{{ timeouts.calico }}'
      - selector: 'k8s-app=calico-typha'
        timeout: '{{ timeouts.calico }}'
      - selector: 'k8s-app=csi-node-driver'
        timeout: '{{ timeouts.calico }}'
    post_config_selectors: '{{ node_selectors }}'

  - prefix: ''
    namespace: 'kube-system'
    post_config_selectors: '{{ kube_selectors }}'

  - prefix: 'calico'
    namespace: 'calico-apiserver'
    post_install_selectors:
      - selector: 'k8s-app=calico-apiserver'
        timeout: '{{ timeouts.calico }}'

  - prefix: 'longhorn'
    namespace: 'longhorn-system'
    install:
      - '{{ urls.longhorn }}/deploy/longhorn.yaml'
    post_install_selectors:
      - selector: 'app=longhorn-driver-deployer'
        timeout: '{{ timeouts.longhorn }}'
      - selector: 'app=longhorn-manager'
        timeout: '{{ timeouts.longhorn }}'
      - selector: 'longhorn.io/component=engine-image'
        timeout: '{{ timeouts.longhorn }}'
      - selector: 'longhorn.io/component=instance-manager'
        timeout: '{{ timeouts.longhorn }}'
      # - selector: 'app=csi-attacher'         # operator only
      #   timeout: '{{ timeouts.longhorn }}'
      # - selector: 'app=csi-provisioner'      # operator only
      #   timeout: '{{ timeouts.longhorn }}'
      # - selector: 'app=csi-resizer'          # operator only
      #   timeout: '{{ timeouts.longhorn }}'
      # - selector: 'app=csi-snapshotter'      # operator only
      #   timeout: '{{ timeouts.longhorn }}'
      # - selector: 'app=longhorn-csi-plugin'  # operator only
      #   timeout: '{{ timeouts.longhorn }}'
      - selector: 'app=longhorn-ui'
        timeout: '{{ timeouts.longhorn }}'

  - prefix: 'metallb'
    namespace: 'metallb-system'
    install:
      - '{{ urls.metallb }}/{{ metallb_data[metallb_mode].path }}'
    config:
      - 'metallb-pool.yaml.j2'
    post_install_selectors: '{{ metallb_data[metallb_mode].selectors }}'

  - prefix: 'certmgr'
    namespace: 'cert-manager'
    install:
      - '{{ urls.certmgr }}/cert-manager.yaml'
    post_install_selectors:
      - selector: 'app.kubernetes.io/instance=cert-manager'

  - prefix: 'haproxy-ingress'
    namespace: 'haproxy-controller'
    install:
      - '{{ urls.haproxy }}/deploy/haproxy-ingress.yaml'
...
# vim: set filetype=yaml
