---
- name: 'Create symlinks'
  loop: '{{ k3s_symlinks }}'
  file:
    src: '{{ k3s_binary }}'
    dest: '{{ k3s_binary_dir }}/{{ item }}'
    state: 'link'
    mode: '0755'
    owner: 'root'
    group: 'root'

- name: 'Create scripts'
  loop: '{{ k3s_scripts }}'
  copy:
    src: '{{ item[1:] }}'
    dest: '{{ item }}'
    mode: '0755'
    owner: 'root'
    group: 'root'

- name: 'Ensure k3s directories exist'
  loop: '{{ k3s_data_dirs }}'
  file:
    path: '{{ item }}'
    state: 'directory'

# Not sure I can add this to the meta hosts role as it is.
- name: 'Add k3s-vip to hosts file'
  vars:
    vip_name: 'k3s-vip'
  lineinfile:
    path: '/etc/hosts'
    line: '{{ k3s_vip_hosts_line }}'

- name: 'Export environment to file'
  register: 'reg_environment'
  command:
    argv:
      - '/bin/sh'
      - '-c'
      - 'export'

- name: 'Delete environment settings'
  file:
    path: '/etc/rancher/k3s/k3s.env'
    state: 'absent'

- name: 'Touch environment settings'
  file:
    path: '{{ environment_file }}'
    state: 'touch'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create environment settings'
  when: '"_PROXY" in item
         or "_proxy" in item
         or "K3S" in item
         or "CONTAINERD" in item'
  loop: '{{ reg_environment.stdout_lines }}'
  lineinfile:
    line: '{{ item }}'
    dest: '{{ environment_file }}'
    create: yes

- name: 'Template in some files'
  loop: '{{ bootstrap_templates }}'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '{{ item }}'

- name: 'Copy token file from primary'
  when: 'is_primary'
  register: 'reg_read_token'
  run_once: yes
  slurp:
    path: '{{ k3s_token_file }}'

- name: 'Set server_token fact'
  set_fact:
    server_token: '{{ (reg_read_token.content | b64decode).split("\n")[0] }}'

- name: 'Install for RHEL'
  when: 'distro == "rhel"'
  import_tasks: 'rhel_install.yml'

- name: 'Install for Void'
  when: 'distro == "void"'
  import_tasks: 'void_install.yml'

- name: 'Reboot primary'
  when: 'is_primary'
  reboot:
    post_reboot_delay: 30

- name: 'Reboot secondaries'
  when: 'not is_primary'
  reboot:
    post_reboot_delay: 10
...
# vim: set filetype=yaml
