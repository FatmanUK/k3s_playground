---
- name: 'Create random token file'
  when: 'opts_is_primary'
  register: 'reg_create_token'
  copy:
    content: '{{ random_token }}'
    dest: '{{ token_file }}'
    force: false  # if exists, don't recreate it

- name: 'Copy token file from primary'
  when: 'not opts_is_primary'
  delegate_to: '{{ primary_host }}'
  register: 'reg_read_token'
  slurp:
    path: '/var/lib/rancher/k3s/server/node-token'

- name: 'Write token file to secondary'
  when: 'not opts_is_primary'
  copy:
    path: '/var/lib/rancher/k3s/server/token'

## Apparently the next step also removes the binary
#- name: 'Backup the binary'
#  copy:
#    remote_src: yes
#    src: '/usr/local/bin/k3s'
#    dest: '/usr/local/bin/k3s.bak'

## TODO: make safe with failed_when
#- name: 'Remove old data'
#  register: 'reg_remove'
#  vars:
#    e_notfound: 'No such file or directory'
#  failed_when:
#    - 'reg_remove.rc > 0'
#    - 'e_notfound not in reg_remove.msg'
#  command: '/usr/local/bin/k3s-uninstall.sh'

## ffs
#- name: 'Restore the backup'
#  when: 'reg_remove is changed'
#  copy:
#    remote_src: yes
#    src: '/usr/local/bin/k3s.bak'
#    dest: '/usr/local/bin/k3s'

- name: 'Run install script'
  environment:
    K3S_KUBECONFIG_MODE: '0644'
    NO_SELINUX: 'true'
    INSTALL_K3S_SKIP_DOWNLOAD: 'true'
    INSTALL_K3S_EXEC: '{{ opts }}'
  command:
    argv:
      - '{{ k3s_install_script }}'

- name: 'Reboot'
  reboot:

# TODO: Check resolv.conf first
- name: 'Apply Calico CNI'
  when: 'opts_is_primary'
  command:
    argv:
      - 'kubectl'
      - 'apply'
      - '-f'
      - '{{ calico_manifest }}'

#- name: 'Unarchive the calicoctl binary'
#  when: 'opts_is_primary'
#  unarchive:
#    src: 'binaries/calicoctl-{{ calicoctl_version }}.tgz'
#    dest: '/usr/local/bin/'

#- name: 'Permission the binary'
#  when: 'opts_is_primary'
#  file:
#    path: '/usr/local/bin/calicoctl'
#    mode: '0755'

- name: 'Install nginx-ingress'
  when: 'opts_is_primary'
  copy:
    src: 'home/ansible/ingress-nginx.yaml'
    dest: '{{ nginx_manifest }}'
...
# vim: set filetype=yaml
