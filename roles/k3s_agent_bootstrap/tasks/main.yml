---
- name: 'Copy server token'
  register: 'reg_token'
  delegate_to: 'k3s-mother-001'
  run_once: yes
  slurp:
    src: '{{ k3s_token_file }}'

- name: 'Create symlinks'
  loop:
    - 'kubectl'
    - 'crictl'
    - 'ctr'
  file:
    src: '{{ k3s_binary }}'
    dest: '{{ k3s_binary_dir }}/{{ item }}'
    state: 'link'
    mode: '0755'
    owner: 'root'
    group: 'root'

- name: 'Create scripts'
  loop: '{{ k3s_scripts }}'
  copy:
    src: '{{ item[1:] }}'
    dest: '{{ item }}'
    mode: '0755'
    owner: 'root'
    group: 'root'

- name: 'Ensure configuration directories exist'
  loop: '{{ data_dirs }}'
  file:
    path: '{{ item }}'
    state: 'directory'

- name: 'Export environment to file'
  register: 'reg_environment'
  command:
    argv:
      - '/bin/sh'
      - '-c'
      - 'export'

- name: 'Delete environment settings'
  file:
    path: '{{ environment_file }}'
    state: 'absent'

- name: 'Touch environment settings'
  file:
    path: '{{ environment_file }}'
    state: 'touch'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create environment settings'
  when: '"_PROXY" in item
         or "_proxy" in item
         or "K3S" in item
         or "CONTAINERD" in item'
  loop: '{{ reg_environment.stdout_lines }}'
  lineinfile:
    line: '{{ item }}'
    dest: '{{ environment_file }}'
    create: yes

- name: 'Install for RHEL'
  when: 'distro == "rhel"'
  import_tasks: 'rhel_install.yml'

- name: 'Install for Void'
  when: 'distro == "void"'
  import_tasks: 'void_install.yml'

- name: 'Reboot'
  reboot:

- name: 'Copy hostname to nodename'
  copy:
    remote_src: yes
    src: '/etc/hostname'
    dest: '{{ nodename_file }}'

#cat | sudo tee /etc/rancher/k3s/registries.yaml <<EOF
## BEGIN ANSIBLE MANAGED BLOCK --- registry
#mirrors:
#  docker.io:
#    endpoint:
#      - 'http://127.0.0.1:30555'
## END ANSIBLE MANAGED BLOCK --- registry
#EOF
...
# vim: set filetype=yaml
