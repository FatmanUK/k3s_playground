---
- name: 'Enable sysctl settings'
  loop: '{{ sysctl_settings }}'
  lineinfile:
    path: '/etc/sysctl.conf'
    line: '{{ item }}'
    insertafter: 'EOF'

#    for XTABLES in iptables ip6tables; do
#        if has_working_xtables ${XTABLES}; then
#            $SUDO ${XTABLES}-save 2>/dev/null | grep -v KUBE- | grep -iv flannel | grep -iv cali | $SUDO ${XTABLES}-restore
#        fi
#    done

- name: 'Add shell to /etc/shells'
  loop: '{{ k3s_shells}}'
  lineinfile:
    path: '/etc/shells'
    line: '{{ item }}'
    insertafter: 'EOF'

# TODO: figure out failed_when for chsh
- name: 'Change ansible user shell'
  vars:
    cmd:
      - 'scripts/shell_change.bash'
      - '{{ k3s_shells | first | quote }}'
      - 'ansible'
  args:
    executable: '/bin/bash'
  script: '{{ cmd | join(" ") }}'

- name: 'Create logrotate directory'
  file:
    path: '/etc/logrotate.d'
    state: 'directory'

- name: 'Template in configs'
  register: 'reg_config_templates'
  loop: '{{ guest_templates }}'
  template:
    src: '{{ item.path[1:] }}.j2'
    dest: '{{ item.path }}'
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0644") }}'

- name: 'Set cron job for logrotate'
  cron_legacy:
    name: 'Logrotate'
    cron_file: '/etc/crontab'
    user: 'root'
    job: '/usr/bin/logrotate /etc/logrotate.conf'
    minute: '04'

- name: 'Disable SELinux'
  register: 'reg_selinux'
  failed_when:
    - 'reg_selinux.rc != 0'
    - 'e_selinux_notexists not in reg_selinux.msg'
  replace:
    path: '/etc/selinux/config'
    regexp: '^SELINUX=enforcing$'
    replace: 'SELINUX=disabled'

# TODO: fix this (issue #31)
- name: 'Add rshared option to root partition'
  vars:
    replace_internal: '\2,rshared'
    regex_negative_lookahead: 'rshared'
    regex_prefix: '([^ ]* \/ [^ ]* )'
    regex_suffix: '( \d \d)'
  replace:
    path: '/etc/fstab'
    regexp: '^{{ regex_prefix }}((:?(?!{{ regex_negative_lookahead }}).)*?){{ regex_suffix }}$'
    replace: '\1{{ replace_internal }}\4'

- name: 'Create local repo mountpoint'
  register: 'reg_mkdir'
  vars:
  failed_when:
    - 'reg_mkdir.rc is defined'
    - 'reg_mkdir.module_stdout is defined'
    - 'reg_mkdir.rc != 0'
    - 'e_mkdir_readonly not in reg_mkdir.module_stdout'
  file:
    path: '/mnt/disc'
    state: 'directory'
    mode: '0000'

- name: 'Renewing SSH keys'
  vars:
    cmd:
      - 'scripts/ssh_renew.bash'
      - '{{ "4 KB" | human_to_bytes | quote }}'
  args:
    executable: '/bin/bash'
  script: '{{ cmd | join(" ") }}'
...
# vim: set filetype=yaml
