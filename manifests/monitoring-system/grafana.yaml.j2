---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: monitoring-system

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pv-claim
  namespace: monitoring-system
spec:
  storageClassName: {{ app_storage_class }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ grafana_disk_size_gb }}Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - env: []
        image: grafana/grafana:{{ grafana_tag }}
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
      nodeSelector:
        node-type: worker
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring-system
spec:
  selector:
    app: grafana
  type: LoadBalancer

  loadBalancerIP: {{ loadbalancer_pool_network | ipv4(grafana_fourth_byte) | ipv4("address") }}
  ports:
    - name: http
      port: {{ grafana_port }}
...
