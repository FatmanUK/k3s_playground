---
# Install --v
- name: 'Ready local project resources'
  hosts: 'all'         #    .
  connection: 'local'  #   /!\
  run_once: yes        #  '~~~`
  become: no
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'k3s_ready'

- name: 'Ready all targets'
  hosts: 'all'
  gather_facts: no
  become: yes
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'guest_ready'

- name: 'Ready RHEL targets'
  hosts: 'rhel'
  gather_facts: no
  become: yes
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'rhel_ready'

- name: 'Ready Void targets'
  hosts: 'void'
  gather_facts: no
  become: yes
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'void_ready'

- name: 'Base install'
  hosts: 'nodes'
  gather_facts: no
  become: yes
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'nodes_ready'
    - 'images_ready'
    - 'k3s_base_install'  # fails if k3s_ready didn't complete once
    # - 'do_nothing'        # these let me stop and start the roles
    # - 'fail_egregiously'  # these let me stop and start the roles

- name: 'Post-install auto-snapshot'
  gather_facts: no
  hosts: 'vm_guests'   #    .
  connection: 'local'  #   /!\
  run_once: no         #  '~~~`
  become: no
  vars:
    snapshot_name: 'post-install'
  tags:
    - 'install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'vm_snapshot_create'

- name: 'Manual snapshot'
  gather_facts: no
  hosts: 'vm_guests'   #    .
  connection: 'local'  #   /!\
  run_once: no         #  '~~~`
  become: no
  tags:
    - 'snapshot'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'vm_snapshot_create'

- name: 'Revert snapshots'
  gather_facts: no
  hosts: 'vm_guests'   #    .
  connection: 'local'  #   /!\
  run_once: no         #  '~~~`
  become: no
  tags:
    - 'revert_snapshot'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'vm_snapshot_rollback'

# Bootstrap --v
- name: 'Generate server token'
  hosts: '{{ groups.k3s_primary_masters | first }}'
  gather_facts: no
  become: yes
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'server_token_generate'

- name: 'Enable k3s (RHEL)'
  hosts: 'rhel'
  gather_facts: no
  become: yes
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'rhel_enable'

- name: 'Enable k3s (Void)'
  hosts: 'void'
  gather_facts: no
  become: yes
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'void_enable'

- name: 'Generate API tokens'
  hosts: '{{ groups.k3s_primary_masters | first }}'
  gather_facts: no
  become: yes
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'node_wait_tokenless'
    - 'api_tokens_generate'

- name: 'Reboot masters'
  hosts: 'k3s_primary_masters'
  gather_facts: no
  become: yes
  vars:
    pre_reboot_delay_s: 10
    post_reboot_delay_s: 20
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'cluster_reboot'
    - 'node_wait_tokenless'

- name: 'Reboot non-masters'
  hosts: 'nodes:!k3s_primary_masters'
  gather_facts: no
  become: yes
  vars:
    pre_reboot_delay_s: 10
    post_reboot_delay_s: 5
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'cluster_reboot'
    - 'node_wait_tokenless'

- name: 'Install and patch base manifests'
  hosts: '{{ groups.k3s_primary_masters | first }}'
  gather_facts: no
  become: yes
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'k3s_install'
    - 'k3s_patch'

- name: 'Post-bootstrap auto-snapshot'
  gather_facts: no
  hosts: 'vm_guests'   #    .
  connection: 'local'  #   /!\
  run_once: no         #  '~~~`
  become: no
  vars:
    snapshot_name: 'post-bootstrap'
  tags:
    - 'bootstrap'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'vm_snapshot_create'

# Apps_install --v
- name: 'Fetch application manifests'
  hosts: 'nodes'
  gather_facts: no
  become: yes
  tags:
    - 'apps_install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'apps_fetch'        # fetch app images
    - 'rolling_restart'

- name: 'Deploy application manifests'
  hosts: '{{ groups.k3s_primary_masters | first }}'
  gather_facts: no
  become: yes
  tags:
    - 'apps_install'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'apps_install'      # install app manifests (and configs)
    - 'apps_patch'        # modify installed settings (kubectl patch)
    # - 'do_nothing'        # these let me stop and start the roles
    # - 'fail_egregiously'  # these let me stop and start the roles

# Smoke_test --v
- name: 'Smoke testing'
  hosts: '{{ groups.k3s_primary_masters | first }}'
  gather_facts: no
  become: no
  tags:
    - 'smoke_test'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'smoke_test'

# Badly-designed Ansible feature (argument_spec) is unusable
# because it forces 'always' tag :(
- name: 'Alert all consoles in the cluster'
  hosts: 'all'
  gather_facts: no
  become: no
  tags:
    - 'allwall'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'all_wall'

- name: 'Rolling restart cluster'
  hosts: 'nodes'
  gather_facts: no
  become: yes
  tags:
    - 'rolling_restart'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'rolling_restart'

- name: 'Rolling restart k3s service'
  hosts: 'nodes'
  gather_facts: no
  become: yes
  serial: 1
  tags:
    - 'rolling_service_restart'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'rolling_service_restart'

- name: 'Purge k3s cluster'
  hosts: 'all'
  gather_facts: no
  become: yes
  tags:
    - 'destroy_cluster'
    - 'never'
  handlers:
    - import_tasks: 'handlers/main.yml'
  roles:
    - 'k3s_destroy_all'
...
# vim: set filetype=yaml
